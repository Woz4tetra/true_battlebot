//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.ZedInterfaces
{
    [Serializable]
    public class RGBDSensorsMsg : Message
    {
        public const string k_RosMessageName = "zed_interfaces/RGBDSensors";
        public override string RosMessageName => k_RosMessageName;

        //  Header
        public HeaderMsg header;
        //  CameraInfo
        public Sensor.CameraInfoMsg rgbCameraInfo;
        public Sensor.CameraInfoMsg depthCameraInfo;
        //  Raw
        public Sensor.ImageMsg rgb;
        public Sensor.ImageMsg depth;
        //  IMU
        public Sensor.ImuMsg imu;
        //  Magnetometer
        public Sensor.MagneticFieldMsg mag;

        public RGBDSensorsMsg()
        {
            this.header = new HeaderMsg();
            this.rgbCameraInfo = new Sensor.CameraInfoMsg();
            this.depthCameraInfo = new Sensor.CameraInfoMsg();
            this.rgb = new Sensor.ImageMsg();
            this.depth = new Sensor.ImageMsg();
            this.imu = new Sensor.ImuMsg();
            this.mag = new Sensor.MagneticFieldMsg();
        }

        public RGBDSensorsMsg(HeaderMsg header, Sensor.CameraInfoMsg rgbCameraInfo, Sensor.CameraInfoMsg depthCameraInfo, Sensor.ImageMsg rgb, Sensor.ImageMsg depth, Sensor.ImuMsg imu, Sensor.MagneticFieldMsg mag)
        {
            this.header = header;
            this.rgbCameraInfo = rgbCameraInfo;
            this.depthCameraInfo = depthCameraInfo;
            this.rgb = rgb;
            this.depth = depth;
            this.imu = imu;
            this.mag = mag;
        }

        public static RGBDSensorsMsg Deserialize(MessageDeserializer deserializer) => new RGBDSensorsMsg(deserializer);

        private RGBDSensorsMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            this.rgbCameraInfo = Sensor.CameraInfoMsg.Deserialize(deserializer);
            this.depthCameraInfo = Sensor.CameraInfoMsg.Deserialize(deserializer);
            this.rgb = Sensor.ImageMsg.Deserialize(deserializer);
            this.depth = Sensor.ImageMsg.Deserialize(deserializer);
            this.imu = Sensor.ImuMsg.Deserialize(deserializer);
            this.mag = Sensor.MagneticFieldMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.rgbCameraInfo);
            serializer.Write(this.depthCameraInfo);
            serializer.Write(this.rgb);
            serializer.Write(this.depth);
            serializer.Write(this.imu);
            serializer.Write(this.mag);
        }

        public override string ToString()
        {
            return "RGBDSensorsMsg: " +
            "\nheader: " + header.ToString() +
            "\nrgbCameraInfo: " + rgbCameraInfo.ToString() +
            "\ndepthCameraInfo: " + depthCameraInfo.ToString() +
            "\nrgb: " + rgb.ToString() +
            "\ndepth: " + depth.ToString() +
            "\nimu: " + imu.ToString() +
            "\nmag: " + mag.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
