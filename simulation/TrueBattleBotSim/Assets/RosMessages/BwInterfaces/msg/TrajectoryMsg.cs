//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.BwInterfaces
{
    [Serializable]
    public class TrajectoryMsg : Message
    {
        public const string k_RosMessageName = "bw_interfaces/Trajectory";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        public Geometry.PoseStampedMsg[] poses;
        public Geometry.TwistStampedMsg[] twists;

        public TrajectoryMsg()
        {
            this.header = new HeaderMsg();
            this.poses = new Geometry.PoseStampedMsg[0];
            this.twists = new Geometry.TwistStampedMsg[0];
        }

        public TrajectoryMsg(HeaderMsg header, Geometry.PoseStampedMsg[] poses, Geometry.TwistStampedMsg[] twists)
        {
            this.header = header;
            this.poses = poses;
            this.twists = twists;
        }

        public static TrajectoryMsg Deserialize(MessageDeserializer deserializer) => new TrajectoryMsg(deserializer);

        private TrajectoryMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.poses, Geometry.PoseStampedMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.twists, Geometry.TwistStampedMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.WriteLength(this.poses);
            serializer.Write(this.poses);
            serializer.WriteLength(this.twists);
            serializer.Write(this.twists);
        }

        public override string ToString()
        {
            return "TrajectoryMsg: " +
            "\nheader: " + header.ToString() +
            "\nposes: " + System.String.Join(", ", poses.ToList()) +
            "\ntwists: " + System.String.Join(", ", twists.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
