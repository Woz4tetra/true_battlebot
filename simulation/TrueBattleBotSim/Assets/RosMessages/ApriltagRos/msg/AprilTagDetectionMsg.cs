//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.ApriltagRos
{
    [Serializable]
    public class AprilTagDetectionMsg : Message
    {
        public const string k_RosMessageName = "apriltag_ros/AprilTagDetection";
        public override string RosMessageName => k_RosMessageName;

        //  Tag ID(s). If a standalone tag, this is a vector of size 1. If a tag bundle,
        //  this is a vector containing the IDs of each tag in the bundle.
        public int[] id;
        //  Tag size(s). If a standalone tag, this is a vector of size 1. If a tag bundle,
        //  this is a vector containing the sizes of each tag in the bundle, in the same
        //  order as the IDs above.
        public double[] size;
        //  Pose in the camera frame, obtained from homography transform. If a standalone
        //  tag, the homography is from the four tag corners. If a tag bundle, the
        //  homography is from at least the four corners of one member tag and at most the
        //  four corners of all member tags.
        public Geometry.PoseWithCovarianceStampedMsg pose;

        public AprilTagDetectionMsg()
        {
            this.id = new int[0];
            this.size = new double[0];
            this.pose = new Geometry.PoseWithCovarianceStampedMsg();
        }

        public AprilTagDetectionMsg(int[] id, double[] size, Geometry.PoseWithCovarianceStampedMsg pose)
        {
            this.id = id;
            this.size = size;
            this.pose = pose;
        }

        public static AprilTagDetectionMsg Deserialize(MessageDeserializer deserializer) => new AprilTagDetectionMsg(deserializer);

        private AprilTagDetectionMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.id, sizeof(int), deserializer.ReadLength());
            deserializer.Read(out this.size, sizeof(double), deserializer.ReadLength());
            this.pose = Geometry.PoseWithCovarianceStampedMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.id);
            serializer.Write(this.id);
            serializer.WriteLength(this.size);
            serializer.Write(this.size);
            serializer.Write(this.pose);
        }

        public override string ToString()
        {
            return "AprilTagDetectionMsg: " +
            "\nid: " + System.String.Join(", ", id.ToList()) +
            "\nsize: " + System.String.Join(", ", size.ToList()) +
            "\npose: " + pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
