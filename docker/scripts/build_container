#!/bin/bash
set -e
BASE_DIR=$(realpath "$(dirname $0)")

cd ${BASE_DIR}/../resources

IMAGE_VERSION=$(${BASE_DIR}/../get_image_tag)
PROJECT_NAME=$(${BASE_DIR}/../get_project_name)
ORGANIZATION=$(${BASE_DIR}/../get_organization)
docker build \
    -f ./Dockerfile \
    --build-arg PROJECT_NAME=${PROJECT_NAME} \
    --build-arg ORGANIZATION=${ORGANIZATION} \
    -t ${IMAGE_VERSION} .

CONTAINERS=$(docker ps -a --format "{{.Names}}" | grep -e "${PROJECT_NAME}")
if [[ ! -z ${CONTAINERS} ]]; then
    docker stop ${CONTAINERS} &> /dev/null
    docker rm ${CONTAINERS} &> /dev/null
    echo -e '\033[1mRemoved Containers:\033[0m'
    echo "${CONTAINERS}"
fi

IMAGES=$(docker image list --format "{{.Repository}}" | grep -E "vsc-dill|devcontainer|dev_container")
# don't use "" around IMAGES var to take advantage of globbing
docker rmi ${IMAGES} &> /dev/null
echo -e '\033[1mRemoved Images:\033[0m'
echo "${IMAGES}"
